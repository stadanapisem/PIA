package database;
// Generated Jun 7, 2017 5:07:06 PM by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.Transaction;
import util.NewHibernateUtil;

/**
 * Programme generated by hbm2java
 */
@Entity
@Table(name = "programme",
        catalog = "projekat",
        uniqueConstraints = @UniqueConstraint(columnNames = {"pid", "eid", "cid"})
)
public class Programme implements java.io.Serializable {

    private Integer pid;
    private Conference conference;
    private Event event;

    public static boolean addProgramme(Programme p) {
        org.hibernate.Session session = NewHibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        boolean ret = false;

        try {
            tx = session.beginTransaction();
            session.save(p);
            tx.commit();
            ret = true;
        } catch (Exception e) {
            if (tx != null) {
                tx.rollback();
            }
            e.printStackTrace();
        } finally {
            session.close();
        }

        return ret;
    }

    public Programme() {
    }

    public Programme(Conference conference, Event event) {
        this.conference = conference;
        this.event = event;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "pid", unique = true, nullable = false)
    public Integer getPid() {
        return this.pid;
    }

    public void setPid(Integer pid) {
        this.pid = pid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "cid", nullable = false)
    public Conference getConference() {
        return this.conference;
    }

    public void setConference(Conference conference) {
        this.conference = conference;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "eid", nullable = false)
    public Event getEvent() {
        return this.event;
    }

    public void setEvent(Event event) {
        this.event = event;
    }

}
