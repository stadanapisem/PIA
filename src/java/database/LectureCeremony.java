package database;
// Generated Jun 7, 2017 5:07:06 PM by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.Transaction;
import util.NewHibernateUtil;

/**
 * LectureCeremony generated by hbm2java
 */
@Entity
@Table(name = "lecture_ceremony",
         catalog = "projekat",
         uniqueConstraints = @UniqueConstraint(columnNames = {"lcid", "eid", "lid"})
)
public class LectureCeremony implements java.io.Serializable {

    private Integer lcid;
    private Ceremony ceremony;
    private Lecture lecture;

    public static boolean addLectureCeremony(LectureCeremony c) {
        org.hibernate.Session session = NewHibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        boolean ret = false;

        try {
            tx = session.beginTransaction();
            session.save(c);
            tx.commit();
            ret = true;
        } catch (Exception e) {
            if (tx != null) {
                tx.rollback();
            }
            e.printStackTrace();
        } finally {
            session.close();
        }

        return ret;
    }
    
    public LectureCeremony() {
    }

    public LectureCeremony(Ceremony ceremony, Lecture lecture) {
        this.ceremony = ceremony;
        this.lecture = lecture;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "lcid", unique = true, nullable = false)
    public Integer getLcid() {
        return this.lcid;
    }

    public void setLcid(Integer lcid) {
        this.lcid = lcid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "eid", nullable = false)
    public Ceremony getCeremony() {
        return this.ceremony;
    }

    public void setCeremony(Ceremony ceremony) {
        this.ceremony = ceremony;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "lid", nullable = false)
    public Lecture getLecture() {
        return this.lecture;
    }

    public void setLecture(Lecture lecture) {
        this.lecture = lecture;
    }

}
